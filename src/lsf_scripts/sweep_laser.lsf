if (length(getvariable("main__", "")) == 0 or getvariable("main__", "") == currentscriptname) {
    #?currentscriptname;

    switchtodesign;
    groupscope("::Root Element");
    deleteall;
    clear;
    main__ = currentscriptname;
    
    lambda_from = c/190.1e12;
    lambda_till = c/197.25e12;
    laser_power = 1e-3;
    
    record_all = true;
    annotate_all = 2;
}


# Create Compond Element
groupscope("::Root Element");

# Adding Elements
addelement("Optical Network Analyzer");
set("name", "laser");

# Positioning Elements
setnamed("laser", "x position", 0);
setnamed("laser", "y position", 0);

# Setting Element Properties
setnamed("laser", "input parameter", "start and stop");
setnamed("laser", "start frequency", c/1500e-9);
setnamed("laser", "stop frequency", c/1600e-9);
num_points = 1e5;
laser_power_dbm = 10 * log10(laser_power) + 30;
adjust_power_dbm =  -(10 * log10(0.001 / num_points) + 30)*2;
adjust_power = 10^((laser_power_dbm + adjust_power_dbm - 30)/10);
setnamed("laser", "number of points", num_points);
setnamed("laser", "power", adjust_power);
setnamed("laser", "number of input ports", 4);
setnamed("laser", "analysis type", "impulse response");
setnamed("laser", "plot kind", "wavelength");
setnamed("laser", "angle unit", "rad");
setnamed("laser", "peak analysis", "disable");
setnamed("laser", "label", "TM");

# Hiding Element Annotations
setnamed("laser", "annotate", annotate_all >= 1);

groupscope("::Root Element");

if (getvariable("main__", "") == currentscriptname) {
    main__ = "";
}