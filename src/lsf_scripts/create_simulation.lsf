if (length(getvariable("main__", "")) == 0 or getvariable("main__", "") == currentscriptname) {
    #?currentscriptname;
        
    switchtodesign;
    groupscope("::Root Element");
    deleteall;
    clear;
    main__ = currentscriptname;

    num_resonators = 1;
    center_wavelength = 1550e-9; # m
    wavelength_gap = 100e-9; # m
    
    laser_power = 1e-3; # W
    wg_insertion_loss = 3; # dB/cm
    dc_insertion_loss = 0; # dB
    bend_insertion_loss = 0.04; # dB/2pi
    straight_waveguide_length = 10e-6; # m
    straight_n_eff = 2.262;
    straight_n_grp = 3.484;
    bend_n_eff = 2.262;
    bend_n_grp = 3.484;

    # -1 for non-reciprocal, 0 for reciprocal and +1 for full-reciprocal
    reciprocal = -1;
    frequency_sweep = true;
    waveguides = false;
    record_all = true;
    annotate_all = 1;
}

if (num_resonators < 1) { print("WTF?"); ?"WTF?"; break; }

# Adding Properties
addproperty("::Root Element", "num_resonators", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=num_resonators);
addproperty("::Root Element", "center_wavelength", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=center_wavelength);
addproperty("::Root Element", "wavelength_gap", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=wavelength_gap);
addproperty("::Root Element", "laser_power", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=laser_power);
addproperty("::Root Element", "wg_insertion_loss", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=wg_insertion_loss);
addproperty("::Root Element", "dc_insertion_loss", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=dc_insertion_loss);
addproperty("::Root Element", "bend_insertion_loss", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=bend_insertion_loss);
addproperty("::Root Element", "straight_waveguide_length", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=straight_waveguide_length);
addproperty("::Root Element", "straight_n_eff", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=straight_n_eff);
addproperty("::Root Element", "straight_n_grp", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=straight_n_grp);
addproperty("::Root Element", "bend_n_eff", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=bend_n_eff);
addproperty("::Root Element", "bend_n_grp", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=bend_n_grp);
addproperty("::Root Element", "reciprocal", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=reciprocal);
addproperty("::Root Element", "frequency_sweep", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=frequency_sweep);
addproperty("::Root Element", "waveguides", "Standard", type="Number", from=-1e100, to=1e100, kind="FixedUnit", unit="", default_value=waveguides);
annotateproperty("::Root Element", "num_resonators", annotate_all >= 3);
annotateproperty("::Root Element", "center_wavelength", annotate_all >= 3);
annotateproperty("::Root Element", "wavelength_gap", annotate_all >= 3);
annotateproperty("::Root Element", "laser_power", annotate_all >= 3);
annotateproperty("::Root Element", "wg_insertion_loss", annotate_all >= 3);
annotateproperty("::Root Element", "dc_insertion_loss", annotate_all >= 3);
annotateproperty("::Root Element", "bend_insertion_loss", annotate_all >= 3);
annotateproperty("::Root Element", "straight_waveguide_length", annotate_all >= 3);
annotateproperty("::Root Element", "straight_n_eff", annotate_all >= 3);
annotateproperty("::Root Element", "straight_n_grp", annotate_all >= 3);
annotateproperty("::Root Element", "bend_n_eff", annotate_all >= 3);
annotateproperty("::Root Element", "bend_n_grp", annotate_all >= 3);
annotateproperty("::Root Element", "reciprocal", annotate_all >= 3);
annotateproperty("::Root Element", "frequency_sweep", annotate_all >= 3);
annotateproperty("::Root Element", "waveguides", annotate_all >= 3);

# Setting Properties
setnamed("::Root Element", "bitrate", 2.5e+10);
setnamed("::Root Element", "time window", 5e-9);
setnamed("::Root Element", "sample rate", 2e+12);

if (reciprocal < 0) {
    create_non_reciprocal_simulation;
} else {
    full_reciprocal = reciprocal > 0;
    create_reciprocal_simulation;
}


# Setting Element Properties
for (i = 1:num_resonators) {
    setexpression("R_" + num2str(i), "center_wavelength", "center_wavelength");
    setexpression("R_" + num2str(i), "wg_insertion_loss", "wg_insertion_loss");
    setexpression("R_" + num2str(i), "dc_insertion_loss", "dc_insertion_loss");
    setexpression("R_" + num2str(i), "bend_insertion_loss", "bend_insertion_loss");
    setexpression("R_" + num2str(i), "straight_n_eff", "straight_n_eff");
    setexpression("R_" + num2str(i), "straight_n_grp", "straight_n_grp");
    setexpression("R_" + num2str(i), "bend_n_eff", "bend_n_eff");
    setexpression("R_" + num2str(i), "bend_n_grp", "bend_n_grp");

    if (i == 1) {
        setexpression("R_" + num2str(i), "left_edge_length", "straight_waveguide_length");
    } else {
        setexpression("R_" + num2str(i), "left_edge_length", "straight_waveguide_length/2");
    }
    if (i == num_resonators) {
        setexpression("R_" + num2str(i), "right_edge_length", "straight_waveguide_length");
    } else {
        setexpression("R_" + num2str(i), "right_edge_length", "straight_waveguide_length/2");
    }
}


if (getvariable("main__", "") == currentscriptname) {
    main__ = "";
}
